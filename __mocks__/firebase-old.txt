// __mocks__/firebase.js
// Ini adalah mock untuk Firebase SDK yang digunakan di lingkungan Jest.

const mockAuth = {
  signInWithEmailAndPassword: jest.fn(() => Promise.resolve({ user: { uid: 'mock-uid-login' } })),
  createUserWithEmailAndPassword: jest.fn(() => Promise.resolve({ user: { uid: 'mock-uid-register' } })),
  signOut: jest.fn(() => Promise.resolve()),
  onAuthStateChanged: jest.fn((callback) => {
    // Panggil callback segera, defaultnya tidak ada user
    callback(null);
    return jest.fn(); // Mengembalikan fungsi unsubscribe palsu
  }),
  currentUser: null // Akan diatur oleh test saat diperlukan
};

const mockFirestore = {
  collection: jest.fn(() => mockFirestore),
  doc: jest.fn(() => mockFirestore),
  add: jest.fn(() => Promise.resolve()),
  delete: jest.fn(() => Promise.resolve()),
  where: jest.fn(() => mockFirestore),
  orderBy: jest.fn(() => mockFirestore),
  onSnapshot: jest.fn((callback) => {
    // Simulasi snapshot kosong secara default
    callback({
      empty: true,
      docs: [],
      forEach: jest.fn((cb) => {})
    });
    return jest.fn(); // Mengembalikan fungsi unsubscribe palsu
  }),
  FieldValue: {
    serverTimestamp: jest.fn(() => 'MOCKED_TIMESTAMP')
  }
};

const firebase = {
  initializeApp: jest.fn(),
  auth: jest.fn(() => mockAuth),
  firestore: jest.fn(() => mockFirestore),
};

module.exports = firebase;